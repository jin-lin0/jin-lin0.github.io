<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Canvas学习</title>
    <url>/posts/30460/</url>
    <content><![CDATA[<p>Canvas是HTML5提供的一种绘图API，它可以通过JavaScript在网页上绘制图形、图像和动画。</p>
<p>Canvas提供了一个类似画布的区域，可以在其中动态绘制图形。</p>
<span id="more"></span>
<h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="CanvasRenderingContext2D-arc"><a href="#CanvasRenderingContext2D-arc" class="headerlink" title="CanvasRenderingContext2D.arc()"></a>CanvasRenderingContext2D.arc()</h3><p>绘制圆弧路径的方法</p>
<p><code>void ctx.arc(x, y, radius, startAngle, endAngle, anticlockwise);</code></p>
<p><strong>参数</strong></p>
<p><em>x</em>：圆弧中心的x坐标</p>
<p><em>y</em>：圆弧中心的y坐标</p>
<p>radius：圆弧的半径</p>
<p>startAngle：圆弧的起始点，单位弧度</p>
<p>endAngle：圆弧的终点，单位弧度</p>
<p>anticlockwise：true为逆时针，false为顺时针</p>
<p><strong>示例</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">ctx.<span class="title function_">beginPath</span>();</span><br><span class="line">ctx.<span class="title function_">arc</span>(<span class="number">100</span>, <span class="number">75</span>, <span class="number">50</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>);</span><br><span class="line">ctx.<span class="title function_">stroke</span>();</span><br></pre></td></tr></table></figure>
<h3 id="CanvasRenderingContext2D-createLinearGradient"><a href="#CanvasRenderingContext2D-createLinearGradient" class="headerlink" title="CanvasRenderingContext2D.createLinearGradient()"></a>CanvasRenderingContext2D.createLinearGradient()</h3><p>创建线性的渐变对象，渐变可用于填充矩形、圆形、线条、文本等。</p>
<p><code>CanvasGradient ctx.createLinearGradient(x0, y0, x1, y1);</code></p>
<p><strong>参数</strong></p>
<p><em>x0</em>： 渐变开始点的 x 坐标</p>
<p><em>y0</em>：渐变开始点的 y 坐标</p>
<p><em>x1</em>：渐变结束点的 x 坐标</p>
<p><em>y1</em>：渐变结束点的 y 坐标</p>
<p><strong>返回值</strong></p>
<p>CanvasGradient，据指定线路初始化的线性 <code>CanvasGradient</code> 对象。</p>
<h3 id="CanvasRenderingContext2D-createRadialGradient"><a href="#CanvasRenderingContext2D-createRadialGradient" class="headerlink" title="CanvasRenderingContext2D.createRadialGradient()"></a>CanvasRenderingContext2D.createRadialGradient()</h3><p>创建放射性渐变对象。</p>
<p><code>CanvasGradient ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);</code></p>
<p><strong>参数</strong></p>
<p><em>x0</em>：开始圆形的 x 轴坐标。</p>
<p><em>y0</em>：开始圆形的 y 轴坐标。</p>
<p><em>r0</em>：开始圆形的半径。</p>
<p><em>x1</em>：结束圆形的 x 轴坐标。</p>
<p><em>y1</em>：结束圆形的 y 轴坐标。</p>
<p><em>r1</em>：结束圆形的半径</p>
<h3 id="CanvasGradient"><a href="#CanvasGradient" class="headerlink" title="CanvasGradient"></a>CanvasGradient</h3><p>描述渐变的不透明对象，通过<code>CanvasRenderingContext2D.createLinearGradient()</code>或<code>CanvasRenderingContext2D.createRadialGradient()</code> 的返回值得到。</p>
<p><strong>方法</strong></p>
<p><strong><code>CanvasGradient.addColorStop(offset,color)</code></strong></p>
<p>指定到偏移的渐变色。</p>
<p><strong>参数</strong></p>
<p><em>offset</em>：<code>0</code>到<code>1</code>之间的值，超出范围将抛出<code>INDEX_SIZE_ERR</code>错误</p>
<p><em>color</em>：CSS 颜色值，若颜色值不能被解析为有效的 CSS 颜色值，将抛出<code>SYNTAX_ERR</code>错误。</p>
<h2 id="Canvas创建渐变色星空背景"><a href="#Canvas创建渐变色星空背景" class="headerlink" title="Canvas创建渐变色星空背景"></a>Canvas创建渐变色星空背景</h2><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useRef, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">CanvasStar</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> canvasRef = useRef&lt;<span class="title class_">HTMLCanvasElement</span> | <span class="literal">null</span>&gt;(<span class="literal">null</span>);</span><br><span class="line">  <span class="comment">// x：星星的x坐标 y：星星的y坐标 alpha：透明度</span></span><br><span class="line">  <span class="keyword">const</span> starsRef = useRef&lt;&#123; <span class="attr">x</span>: <span class="built_in">number</span>; <span class="attr">y</span>: <span class="built_in">number</span>; <span class="attr">alpha</span>: <span class="built_in">number</span> &#125;[]&gt;([]);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> canvas = canvasRef.<span class="property">current</span>;</span><br><span class="line">    <span class="keyword">if</span> (!canvas) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> context = canvas.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!context) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">		<span class="comment">// 制作渐变色背景</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">drawBackground</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="comment">// 从(canvas.width / 2, 0)到(canvas.width / 2, canvas.height)的线性渐变对象</span></span><br><span class="line">      <span class="keyword">const</span> gradient = context.<span class="title function_">createLinearGradient</span>(</span><br><span class="line">        canvas.<span class="property">width</span> / <span class="number">2</span>,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        canvas.<span class="property">width</span> / <span class="number">2</span>,</span><br><span class="line">        canvas.<span class="property">height</span></span><br><span class="line">      );</span><br><span class="line">      <span class="comment">// 为渐变颜色对象添加百分比颜色渐变断点</span></span><br><span class="line">      gradient.<span class="title function_">addColorStop</span>(<span class="number">0.1</span>, <span class="string">&quot;#1b2947&quot;</span>);</span><br><span class="line">      gradient.<span class="title function_">addColorStop</span>(<span class="number">0.6</span>, <span class="string">&quot;#75517d&quot;</span>);</span><br><span class="line">      gradient.<span class="title function_">addColorStop</span>(<span class="number">1</span>, <span class="string">&quot;#e96f92&quot;</span>);</span><br><span class="line">			<span class="comment">// 填充canvas</span></span><br><span class="line">      context.<span class="property">fillStyle</span> = gradient;</span><br><span class="line">      context.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">		</span><br><span class="line">    <span class="comment">// 制作一个星星</span></span><br><span class="line">    <span class="keyword">const</span> drawShootingStar = (<span class="attr">x</span>: <span class="built_in">number</span>, <span class="attr">y</span>: <span class="built_in">number</span>, <span class="attr">alpha</span>: <span class="built_in">number</span>): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 生成放射渐变对象，(x,y)半径为0的圆至(x,y)半径为10的圆渐变</span></span><br><span class="line">      <span class="keyword">let</span> gradient = context.<span class="title function_">createRadialGradient</span>(x, y, <span class="number">0</span>, x, y, <span class="number">10</span>);</span><br><span class="line">      gradient.<span class="title function_">addColorStop</span>(<span class="number">0</span>, <span class="string">&quot;#fff&quot;</span>);</span><br><span class="line">      gradient.<span class="title function_">addColorStop</span>(<span class="number">0.3</span>, <span class="string">&quot;transparent&quot;</span>);</span><br><span class="line">      context.<span class="property">fillStyle</span> = gradient;</span><br><span class="line">      <span class="comment">// 设置透明度</span></span><br><span class="line">      context.<span class="property">globalAlpha</span> = alpha;</span><br><span class="line">      context.<span class="title function_">beginPath</span>();</span><br><span class="line">      <span class="comment">// 画圆填充</span></span><br><span class="line">      context.<span class="title function_">arc</span>(x, y, <span class="number">10</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>);</span><br><span class="line">      context.<span class="title function_">fill</span>();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成num个星星的数组</span></span><br><span class="line">    <span class="keyword">const</span> generateRandomStars = (</span><br><span class="line">      <span class="attr">num</span>: <span class="built_in">number</span></span><br><span class="line">    ): &#123;</span><br><span class="line">      <span class="attr">x</span>: <span class="built_in">number</span>;</span><br><span class="line">      <span class="attr">y</span>: <span class="built_in">number</span>;</span><br><span class="line">      <span class="attr">alpha</span>: <span class="built_in">number</span>;</span><br><span class="line">    &#125;[] =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> stars = [];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> x = <span class="title class_">Math</span>.<span class="title function_">random</span>() * canvas.<span class="property">width</span>;</span><br><span class="line">        <span class="comment">// 0.6对应制作背景的渐变色</span></span><br><span class="line">        <span class="keyword">const</span> y = <span class="title class_">Math</span>.<span class="title function_">random</span>() * canvas.<span class="property">height</span> * <span class="number">0.6</span>;</span><br><span class="line">        <span class="keyword">const</span> alpha = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">        stars.<span class="title function_">push</span>(&#123; x, y, alpha &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> stars;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 视窗更新，重新生成stars数组</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">updateCanvasSize</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      canvas.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">      canvas.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">      starsRef.<span class="property">current</span> = <span class="title function_">generateRandomStars</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(canvas.<span class="property">width</span> / <span class="number">10</span>, <span class="number">20</span>));</span><br><span class="line">    &#125;;</span><br><span class="line">		</span><br><span class="line">    <span class="comment">// 动画渲染函数</span></span><br><span class="line">    <span class="keyword">const</span> animateStars = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 清空canvas</span></span><br><span class="line">      context.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>);</span><br><span class="line">      context.<span class="property">globalAlpha</span> = <span class="number">1</span>;</span><br><span class="line">      <span class="title function_">drawBackground</span>();</span><br><span class="line"></span><br><span class="line">      starsRef.<span class="property">current</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">star</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">drawShootingStar</span>(star.<span class="property">x</span>, star.<span class="property">y</span>, star.<span class="property">alpha</span>);</span><br><span class="line">        <span class="comment">// 闪烁效果</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">random</span>() &lt; <span class="number">0.1</span> &amp;&amp; star.<span class="property">alpha</span> &lt; <span class="number">0.9</span>) &#123;</span><br><span class="line">          star.<span class="property">alpha</span> += <span class="number">0.1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">random</span>() &gt; <span class="number">0.9</span> &amp;&amp; star.<span class="property">alpha</span> &gt; <span class="number">0.1</span>) &#123;</span><br><span class="line">          star.<span class="property">alpha</span> -= <span class="number">0.1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 动画API</span></span><br><span class="line">      <span class="title function_">requestAnimationFrame</span>(animateStars);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">updateCanvasSize</span>();</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, updateCanvasSize);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">animateStars</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;resize&quot;</span>, updateCanvasSize);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;, []);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">canvas</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">ref</span>=<span class="string">&#123;canvasRef&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">width</span>=<span class="string">&#123;window.innerWidth&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">height</span>=<span class="string">&#123;window.innerHeight&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      // <span class="attr">背景沉底</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">position:</span> &quot;<span class="attr">absolute</span>&quot;, <span class="attr">zIndex:</span> <span class="attr">-2</span> &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    /&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">CanvasStar</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>渐变星空背景的效果图如下：</p>
<img src="/posts/30460/image-20231118191540055.png" class="" title="image-20231118191540055">
]]></content>
      <categories>
        <category>前端</category>
        <category>HTML5</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>HTML5</tag>
        <tag>Canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome调试技巧</title>
    <url>/posts/30786/</url>
    <content><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p><code>commond+w</code>：关闭当前页面</p>
<p><code>commond+1 to 8</code>： 切换到对应序号的浏览器标签</p>
<p><code>commond+shift+T</code>：打开被关闭的页面</p>
<p><code>commond+shift+J</code>：打开下载</p>
<p><code>commond+shift+N</code>：打开新的无痕页面</p>
<span id="more"></span>
<p><code>commond+shift+F</code>：浏览器全屏</p>
<p><code>commond+shift+D</code>：切换调试控制台位置</p>
<p><code>commond+shift+P</code>：打开命令commond面板</p>
<p><code>commond+option+I</code>：打开调试控制台位置</p>
<p><code>commond+option+（左右键）</code>：跳到左边/右边分页</p>
<p><code>commond+[</code> <code>commond+]</code>：左右切换调试工具面板</p>
<p><code>command+R</code>：刷新页面</p>
<p><code>command+L</code>：输入网址</p>
<p><code>space</code> <code>shift+space</code>：向下滚动、向上滚动</p>
<h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><p><code>选中元素，按h</code>：快速隐藏元素</p>
<p><code>选中元素，commond+⬆</code> <code>commond+⬇</code>：上下移动DOM</p>
<h2 id="控制台"><a href="#控制台" class="headerlink" title="控制台"></a>控制台</h2><p><code>$0</code> <code>$1</code> <code>$2</code> <code>$3</code> <code>$4</code>：元素面板选中元素/上1、2、3、4个</p>
<p><code>copy</code>：复制任意对象到剪贴板</p>
<p><script type="math/tex">` `$$$：$代表document.querySelector</script>代表document.querySelectorAll</p>
<p><code>点击小眼睛</code>：实时监控表达式的值</p>
<p><code>$x</code>：获取xPath的值</p>
<img src="/posts/30786/image-20231113041726258.png" class="" title="image-20231113041726258">
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><img src="/posts/30786/image-20231121010637995.png" class="" title="image-20231121010637995">
<p>断点调试的五个按钮：</p>
<ol>
<li>恢复执行。运行到下个断点 </li>
<li>执行下一行的任何操作，并跳转到下一行 </li>
<li>进入函数内部，如果下一行包含一个函数调用，讲进入该函数，并在该函数第一行暂停。</li>
<li>跳出函数，执行当前函数剩余部分，在函数调用下一个语句暂停</li>
<li>暂时禁用所有断点，不删除断点</li>
</ol>
<p>三个小圆点：可选源代码全局搜索选项，</p>
<p>DOM断点在元素面板选中元素右键也可操作。</p>
<h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><img src="/posts/30786/image-20231113151138380.png" class="" title="image-20231113151138380">
<ol>
<li>开始抓取网络请求</li>
<li>清除抓取记录</li>
<li>关闭过滤面板</li>
<li>打开检索面板</li>
<li>跨页面加载保存请求</li>
<li>禁用浏览器缓存</li>
<li>慢速网络模拟</li>
<li>过滤面板，按住commond可以同时选取多个过滤，过滤器中可以设置多个规则，scheme/set-cookie-domain/status-code等</li>
</ol>
<img src="/posts/30786/image-20231113154413153.png" class="" title="image-20231113154413153">
<p>在网络请求列表中，点击启动器可以定位到源代码。按住shift可以看到该请求的依赖者</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Chrome</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客代码折叠功能</title>
    <url>/posts/42993/</url>
    <content><![CDATA[<p>Hexo博客中超过指定高度的代码，增加代码自动折叠功能，优化体验。</p>
<p>调研了多篇hexo代码自动折叠功能的实现后，笔者认为该篇的实现效果目前最好，但是代码的风格和源代码风格应该还存在不是完美契合的地方。</p>
<p><strong>注</strong>：此功能需要修改Next源码，参考<a href="https://www.toimc.com/hexo-usage-2/">hexo博客代码折叠功能</a>实现。</p>
<p>本博客环境：<code>hexo@7.0.0</code>，<code>next@7.8.0</code></p>
<span id="more"></span>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li><p>添加<code>code-unfold.js</code>在<code>themes/next/source/js/code-unfold.js</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable constant_">CODE_MAX_HEIGHT</span> = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">var</span> containers = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 展开</span></span><br><span class="line">$(<span class="string">&quot;body&quot;</span>).<span class="title function_">on</span>(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.js_unfold_code_btn&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">closest</span>(<span class="string">&quot;.js_highlight_container&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 收起</span></span><br><span class="line">$(<span class="string">&quot;body&quot;</span>).<span class="title function_">on</span>(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.js_retract_code_btn&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> $container = $(<span class="variable language_">this</span>).<span class="title function_">closest</span>(<span class="string">&quot;.js_highlight_container&quot;</span>).<span class="title function_">removeClass</span>(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> winTop = $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line">  <span class="keyword">var</span> offsetTop = $container.<span class="title function_">offset</span>().<span class="property">top</span>;</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">css</span>(<span class="string">&quot;top&quot;</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (winTop &gt; offsetTop) &#123;</span><br><span class="line">    <span class="comment">// 设置滚动条位置</span></span><br><span class="line">    $(<span class="string">&quot;body, html&quot;</span>).<span class="title function_">animate</span>(</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">scrollTop</span>: $container.<span class="title function_">offset</span>().<span class="property">top</span> - <span class="variable constant_">CODE_MAX_HEIGHT</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="number">600</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 滚动事件，触发动画效果</span></span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">on</span>(<span class="string">&quot;scroll&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> scrollTop = $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line">  <span class="keyword">var</span> temp = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; containers.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> item = containers[i];</span><br><span class="line">    <span class="keyword">var</span> &#123; $container, height, $hide, hasHorizontalScrollbar &#125; = item;</span><br><span class="line">    <span class="keyword">if</span> ($container.<span class="title function_">closest</span>(<span class="string">&quot;body&quot;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 如果 $container 元素已经不在页面上, 则删除该元素</span></span><br><span class="line">      <span class="comment">// 防止pjax页面跳转之后，元素未删除</span></span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    temp.<span class="title function_">push</span>(item);</span><br><span class="line">    <span class="keyword">if</span> (!$container.<span class="title function_">hasClass</span>(<span class="string">&quot;on&quot;</span>)) &#123;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> offsetTop = $container.<span class="title function_">offset</span>().<span class="property">top</span>;</span><br><span class="line">    <span class="keyword">var</span> hideBtnHeight = $hide.<span class="title function_">outerHeight</span>();</span><br><span class="line">    <span class="comment">// 减去按钮高度，减去底部滚动条高度</span></span><br><span class="line">    <span class="keyword">var</span> maxTop = <span class="built_in">parseInt</span>(</span><br><span class="line">      height - (hasHorizontalScrollbar ? <span class="number">17</span> : <span class="number">0</span>) - hideBtnHeight</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">let</span> top = <span class="built_in">parseInt</span>(</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">min</span>(</span><br><span class="line">        <span class="title class_">Math</span>.<span class="title function_">max</span>(scrollTop - offsetTop, <span class="number">0</span>), <span class="comment">// 如果小于 0 ，则取 0</span></span><br><span class="line">        maxTop <span class="comment">// 如果大于 height ，则取 height</span></span><br><span class="line">      )</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// 根据 sin 曲线设置&quot;收起代码&quot;位置</span></span><br><span class="line">    <span class="keyword">var</span> halfHeight = <span class="built_in">parseInt</span>(</span><br><span class="line">      ($(<span class="variable language_">window</span>).<span class="title function_">height</span>() / <span class="number">2</span>) *</span><br><span class="line">        <span class="title class_">Math</span>.<span class="title function_">sin</span>((top / maxTop) * <span class="number">90</span> * ((<span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">360</span>))</span><br><span class="line">    );</span><br><span class="line">    $hide.<span class="title function_">css</span>(<span class="string">&quot;top&quot;</span>, <span class="title class_">Math</span>.<span class="title function_">min</span>(top + halfHeight, maxTop));</span><br><span class="line">  &#125;</span><br><span class="line">  containers = temp;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加隐藏容器</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addCodeWrap</span>(<span class="params">$node</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> $container = $node</span><br><span class="line">    .<span class="title function_">wrap</span>(</span><br><span class="line">      <span class="string">&#x27;&lt;div class=&quot;js_highlight_container highlight-container&quot;&gt;&lt;div class=&quot;highlight-wrap&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    .<span class="title function_">closest</span>(<span class="string">&quot;.js_highlight_container&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 底部 &quot;展开代码&quot; 与 侧边栏 &quot;收起代码&quot;</span></span><br><span class="line">  <span class="keyword">var</span> $btn = $(<span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;highlight-footer&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;a class=&quot;js_unfold_code_btn show-btn&quot; href=&quot;javascript:;&quot;&gt;展开代码&lt;i class=&quot;fa fa-angle-down&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;a class=&quot;js_retract_code_btn hide-btn&quot; href=&quot;javascript:;&quot;&gt;&lt;i class=&quot;fa fa-angle-up&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;收起代码&lt;/a&gt;</span></span><br><span class="line"><span class="string">  `</span>);</span><br><span class="line"></span><br><span class="line">  $container.<span class="title function_">append</span>($btn);</span><br><span class="line">  <span class="keyword">return</span> $container;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">codeUnfold</span>(<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&quot;.highlight&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 防止重复渲染</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">__render__</span> === <span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">__render__</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> $this = $(<span class="variable language_">this</span>);</span><br><span class="line">    <span class="keyword">var</span> height = $(<span class="variable language_">this</span>).<span class="title function_">outerHeight</span>();</span><br><span class="line">    <span class="keyword">if</span> (height &gt; <span class="variable constant_">CODE_MAX_HEIGHT</span>) &#123;</span><br><span class="line">      <span class="comment">// 添加展开&amp;收起容器</span></span><br><span class="line">      <span class="keyword">var</span> $container = <span class="title function_">addCodeWrap</span>($this);</span><br><span class="line">      containers.<span class="title function_">push</span>(&#123;</span><br><span class="line">        $container,</span><br><span class="line">        height,</span><br><span class="line">        <span class="attr">$hide</span>: $container.<span class="title function_">find</span>(<span class="string">&quot;.js_retract_code_btn&quot;</span>),</span><br><span class="line">        <span class="attr">hasHorizontalScrollbar</span>: <span class="variable language_">this</span>.<span class="property">scrollWidth</span> &gt; <span class="variable language_">this</span>.<span class="property">offsetWidth</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>开启<code>jquery</code>支持</p>
<p>Next的主题配置文件开启fancybox引用的<code>jquery</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>引用code-unfold.js</p>
<p>修改文件<code>themes/next/layout/_scripts/index.swig</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 添加</span><br><span class="line">&#123;&#123;- next_js(&#x27;code-unfold.js&#x27;) &#125;&#125;</span><br></pre></td></tr></table></figure>
<p>修改文件<code>themes/next/source/js/next-boot.js</code>：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">NexT</span>.<span class="property">boot</span>.<span class="property">refresh</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 添加</span></span><br><span class="line">  <span class="title function_">codeUnfold</span>()</span><br><span class="line">  <span class="comment">// ...</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>添加<code>highlight.styl</code>在<code>theme/next/source/css/_common/components/highlight.styl</code></p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 展开收起效果</span></span><br><span class="line"><span class="selector-class">.highlight-container</span></span><br><span class="line">  <span class="attribute">position</span>: relative</span><br><span class="line">  &amp;<span class="selector-class">.on</span></span><br><span class="line">    <span class="selector-class">.highlight-footer</span></span><br><span class="line">      <span class="attribute">display</span>: none</span><br><span class="line">    <span class="selector-class">.hide-btn</span></span><br><span class="line">      <span class="attribute">display</span>: flex</span><br><span class="line">    <span class="selector-class">.highlight-wrap</span></span><br><span class="line">      <span class="attribute">max-height</span>: none</span><br><span class="line">  <span class="selector-class">.highlight-wrap</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">200px</span></span><br><span class="line">  <span class="selector-class">.highlight-footer</span></span><br><span class="line">    <span class="attribute">position</span> absolute</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span></span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span></span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">  <span class="selector-class">.show-btn</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">    <span class="attribute">position</span>: absolute</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>)</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">2em</span></span><br><span class="line">    <span class="attribute">text-decoration</span>: none</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0.8em</span></span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span> <span class="number">4px</span> <span class="number">0</span></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">text-decoration</span>: none</span><br><span class="line">  <span class="selector-class">.hide-btn</span></span><br><span class="line">    <span class="attribute">display</span>: none</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">22px</span></span><br><span class="line">    <span class="attribute">position</span>: absolute</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">21px</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1em</span></span><br><span class="line">    <span class="attribute">text-decoration</span>: none</span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">    <span class="attribute">flex-direction</span>: column</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.1em</span> <span class="number">0</span> <span class="number">0.6em</span></span><br><span class="line">    <span class="attribute">transition</span>: top ease <span class="number">0.35s</span></span><br><span class="line">  <span class="selector-class">.fa-angle-up</span>,</span><br><span class="line">  <span class="selector-class">.fa-angle-down</span></span><br><span class="line">    <span class="attribute">font-style</span>: normal</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span></span><br><span class="line">  <span class="selector-class">.fa-angle-up</span><span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;\f106&quot;</span></span><br><span class="line">  <span class="selector-class">.fa-angle-down</span><span class="selector-pseudo">:before</span></span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;\f107&quot;</span></span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0.5em</span></span><br><span class="line">  <span class="selector-class">.js_unfold_code_btn</span>, <span class="selector-class">.js_retract_code_btn</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>)</span><br><span class="line">    <span class="attribute">border-bottom</span>: none <span class="meta">!important</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>引用<code>highlight.styl</code></p>
<p>修改文件<code>themes/next/source/css/_common/components.styl</code>：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;highlight&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客增加Google收录</title>
    <url>/posts/29809/</url>
    <content><![CDATA[<h2 id="查看是否收录"><a href="#查看是否收录" class="headerlink" title="查看是否收录"></a>查看是否收录</h2><p>在Google的搜索栏中搜索：<code>site:https://xxxx.github.io</code>，如果是尝试使用Google Search Console，则未收录。</p>
<span id="more"></span>
<h2 id="提交申请"><a href="#提交申请" class="headerlink" title="提交申请"></a>提交申请</h2><p>使用Google账号登入<a href="https://search.google.com/search-console/about?hl=zh-CN">Search Console</a>，点击网址前缀添加：</p>
<img src="/posts/29809/image-20231121011634101.png" class="" title="image-20231121011634101">
<p>下载HTML文件，放置到根目录source目录中</p>
<img src="/posts/29809/image-20231121011515612.png" class="" title="image-20231121011515612">
<p>修改HTML文件，添加以下代码后保存上传</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh deploy.sh</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo插件</title>
    <url>/posts/62790/</url>
    <content><![CDATA[<h2 id="Hexo中插入图片"><a href="#Hexo中插入图片" class="headerlink" title="Hexo中插入图片"></a>Hexo中插入图片</h2><ol>
<li><p>安装图片插件<code>hexo-renderer-marked</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-marked --save</span><br></pre></td></tr></table></figure>
<span id="more"></span>
</li>
<li><p><strong>根目录</strong>的<code>_config.yml</code>文件中配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>创建文章，此时会在<code>source/_posts</code>生成同名文件夹，放置文章资源</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">&quot;xxx&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置Typora</p>
<p>打开typora的偏好设置，点击图像，更改为如下设置</p>
<img src="/posts/62790/image-20231105183542790.png" class="" title="image-20231105183542790">
</li>
<li><p>图片引入</p>
<p><strong>注意</strong>：在typora中图片引入的格式：（引入第六步的插件以后，typora图片格式的文字不能显示了）</p>
<img src="/posts/62790/image-20231105190138006.png" class="" title="image-20231105190138006">
<p>在hexo中图片引入的格式：</p>
<img src="/posts/62790/image-20231105190158984.png" class="" title="image-20231105190158984">
</li>
<li><p>安装插件<code>hexo-image-link</code>解决typora与hexo路径不一致问题，这样在typora和hexo都可以显示图片了</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-image-link --save</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Hexo-Next支持数学公式"><a href="#Hexo-Next支持数学公式" class="headerlink" title="Hexo-Next支持数学公式"></a>Hexo-Next支持数学公式</h2><ol>
<li><p>卸载原有渲染器<code>hexo-renderer-marked</code>，安装<code>hexo-renderer-kramed</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked</span><br><span class="line">npm install hexo-renderer-kramed</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置Next的<code>_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line">    <span class="attr">mhchem:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin) required for full Katex support.</span></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>解决语义冲突</p>
<p>取消反斜杠<code>\\</code>和下划线<code>_</code>的转义，<code>/node_modules/kramed/lib/rules/inline.js</code>修改如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span></span><br><span class="line"><span class="attr">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span>, <span class="comment">//第11行</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span><br><span class="line"><span class="attr">em</span>: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>, <span class="comment">//第20行</span></span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：em中对下划线进行了转义，但是对latex中的<code>*</code>没有处理，所以latex中<code>*</code>需要全部用<code>\ast</code>代替。</p>
</li>
<li><p>在需要使用LaTeX渲染的博文中，在文章的Front-matter里打开mathjax开关：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用</p>
<ul>
<li><p>行内公式</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="built_in">$</span>lim<span class="built_in">_</span>&#123;1<span class="keyword">\to</span>+<span class="keyword">\infty</span>&#125;P(|<span class="keyword">\sum</span><span class="built_in">_</span>i<span class="built_in">^</span>nX<span class="built_in">_</span>i-<span class="keyword">\mu</span>|&lt;<span class="keyword">\epsilon</span>)=1, i=1,...,n<span class="built_in">$</span></span><br></pre></td></tr></table></figure>
<p>$lim_{1\to+\infty}P(|\sum_i^nX_i-\mu|&lt;\epsilon)=1, i=1,…,n$</p>
</li>
<li><p>行间公式</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span>lim<span class="built_in">_</span>&#123;1<span class="keyword">\to</span>+<span class="keyword">\infty</span>&#125;P(|<span class="keyword">\sum</span><span class="built_in">_</span>i<span class="built_in">^</span>nX<span class="built_in">_</span>i-<span class="keyword">\mu</span>|&lt;<span class="keyword">\epsilon</span>)=1, i=1,...,n<span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">lim_{1\to+\infty}P(|\sum_i^nX_i-\mu|<\epsilon)=1, i=1,...,n</script></li>
<li><p>公式编号</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;align&#125;</span><br><span class="line">a+b<span class="keyword">\\</span></span><br><span class="line">b+c<span class="keyword">\\</span></span><br><span class="line">a+c<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>&#123;align&#125;</span><br><span class="line"><span class="keyword">\label</span>(52)</span><br></pre></td></tr></table></figure>
<p>\begin{align}<br>a+b\\<br>b+c\\<br>a+c\\<br>\end{align}</p>
</li>
</ul>
</li>
<li><p>搭配typora</p>
<p><code>偏好设置</code> $\Rightarrow$ <code>MarkDown</code> $\Rightarrow$ <code>内联公式开启</code> $\Rightarrow$ <code>重启Typora</code></p>
<p>点击段落，公式块可以输入公式</p>
</li>
</ol>
<h2 id="Hexo生成唯一永久文章链接"><a href="#Hexo生成唯一永久文章链接" class="headerlink" title="Hexo生成唯一永久文章链接"></a>Hexo生成唯一永久文章链接</h2><p>hexo的文章链接默认的生成规则是：<code>:year/:month/:day/:title</code>，标题如果是中文，会变得特别冗长。同时修改标题后文章链接会发生变化，URL层级深，不利于SEO，因此安装如下插件。</p>
<ol>
<li><p>安装<code>hexo-abbrlink</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i hexo-abbrlink --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改<strong>根目录</strong>的<code>_config.yml</code>配置：(<code>posts/</code>可以舍去)</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>清除hexo缓存</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Hexo文章添加评论"><a href="#Hexo文章添加评论" class="headerlink" title="Hexo文章添加评论"></a>Hexo文章添加评论</h2><ol>
<li><p>登录Github，点击右侧头像，点击<strong>Setting</strong>选项</p>
<img src="/posts/62790/image-20231106144206651.png" class="" title="image-20231106144206651">
</li>
<li><p>左侧菜单选择<strong>Developer setting</strong>，进入开发者页面</p>
<img src="/posts/62790/image-20231106144314768.png" class="" title="image-20231106144314768">
</li>
<li><p>选择OAuth创建应用</p>
<img src="/posts/62790/image-20231106144420271.png" class="" title="image-20231106144420271">
</li>
<li><p>设置应用的相关信息</p>
<ul>
<li>Application name 应用名称</li>
<li>Homepage URL 博客主页</li>
<li>Authorization callback URL 授权回调页面（同 Homepage URL）</li>
</ul>
<img src="/posts/62790/image-20231106144714996.png" class="" title="image-20231106144714996">
</li>
</ol>
<ol>
<li><p>保存 <strong>Client ID</strong> 和 <strong>Client secrets</strong></p>
</li>
<li><p>配置主题<code>_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github_id:</span> <span class="string">jin-lin0</span> <span class="comment"># GitHub repo owner</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">jin-lin0.github.io</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="string">xxx</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="string">xxx</span> <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line">  <span class="attr">admin_user:</span> <span class="string">jin-lin0</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class="line">  <span class="attr">distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure>
<ul>
<li>设置<code>enable</code>为<code>true</code></li>
<li><code>github_id</code>填入<code>github</code>帐号</li>
<li><code>repo</code>填入<code>github</code>仓库名（<strong>仓库名不是仓库地址</strong>），评论以<code>issues</code>形式保存在该仓库下</li>
<li><code>client_id</code>填入注册生成的值</li>
<li><code>client_secret</code>填入注册生成的值</li>
<li><code>admin_user</code>填入<code>github</code>帐号，初始化评论账户</li>
</ul>
</li>
<li><p>隐藏评论功能，在front matter中添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Github登录后访问文章，即可自动初始化gitalk的issues，成功添加后效果如下：</p>
<img src="/posts/62790/image-20231106152216919.png" class="" title="image-20231106152216919">
</li>
</ol>
<h2 id="Hexo字数统计与阅读时长"><a href="#Hexo字数统计与阅读时长" class="headerlink" title="Hexo字数统计与阅读时长"></a>Hexo字数统计与阅读时长</h2><ol>
<li><p><strong>根目录</strong>安装插件<code>hexo-symbols-count-time</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>根目录</strong>配置<code>_config.yml</code>，如果中文较多<code>awl</code>采用2，否则默认即可</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">&quot;mins.&quot;</span></span><br></pre></td></tr></table></figure>
<p><code>symbols</code>：字数统计</p>
<p><code>time</code>：时间统计</p>
<p><code>total_symbols</code>：总字数统计</p>
<p><code>total_time</code>：总时间统计</p>
<p><code>exclude_codeblock</code>：排除代码块计算</p>
</li>
<li><p><strong>主题</strong>配置<code>_config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><code>separated_meta</code>：是否和发表时间不在一行</p>
<p><code>item_text_post</code>：文章前面是否显示文字描述（本文字数，统计时长）</p>
<p><code>item_text_total</code>：页面底部显示站点总字数，总时长</p>
</li>
<li><p>清除hexo缓存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Hexo中插入背景音乐"><a href="#Hexo中插入背景音乐" class="headerlink" title="Hexo中插入背景音乐"></a>Hexo中插入背景音乐</h2><ol>
<li><p>网易云音乐中点击生成外链链接</p>
<img src="/posts/62790/image-20231106183321197.png" class="" title="image-20231106183321197">
</li>
<li><p>复制外链iframe到<code>/next/layout/macro/sidebar.swig</code>中即可</p>
<img src="/posts/62790/image-20231106183408365.png" class="" title="image-20231106183408365">
</li>
<li><p>生成我的音乐自定义的歌单的外链播放器需要先分享到自己的动态</p>
<img src="/posts/62790/image-20231109041241369.png" class="" title="image-20231109041241369">
</li>
<li><p>点进分享的动态，点击生成外链播放器就可以了</p>
<img src="/posts/62790/image-20231109041357565.png" class="" title="image-20231109041357565">
</li>
</ol>
<h2 id="Hexo中隐藏文章"><a href="#Hexo中隐藏文章" class="headerlink" title="Hexo中隐藏文章"></a>Hexo中隐藏文章</h2><ol>
<li><p><strong>根目录</strong>安装插件<code>hexo-hide-posts</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-hide-posts --save</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>根目录</strong>添加配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-hide-posts</span></span><br><span class="line"><span class="attr">hide_posts:</span></span><br><span class="line">	<span class="comment"># font-matter中的过滤关键字</span></span><br><span class="line">  <span class="attr">filter:</span> <span class="string">hidden</span></span><br><span class="line">  <span class="comment"># 指定你想要传递隐藏文章的位置，比如让所有隐藏文章在存档页面可见</span></span><br><span class="line">  <span class="comment"># 常见的位置有：index, tag, category, archive, sitemap, feed, etc.</span></span><br><span class="line">  <span class="comment"># 留空则默认全部隐藏</span></span><br><span class="line">  <span class="attr">public_generators:</span> []</span><br><span class="line">  <span class="comment"># 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span></span><br><span class="line">  <span class="attr">noindex:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>文章的<code>Font-Matter</code>中添加<code>hidden: true</code>即可隐藏，但仍可通过链接访问</p>
</li>
<li><p>控制台输入<code>hexo hidden:list</code>可以查看隐藏的文章列表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span>: _posts/实用网站收集.md</span><br><span class="line">slug: 实用网站收集</span><br><span class="line">title: 实用网站收集</span><br><span class="line"><span class="built_in">date</span>: Mon Nov 06 2023 01:56:45 GMT+0800</span><br><span class="line">updated: Sun Nov 19 2023 00:51:06 GMT+0800</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Hexo配置canvas-nest背景"><a href="#Hexo配置canvas-nest背景" class="headerlink" title="Hexo配置canvas-nest背景"></a>Hexo配置canvas-nest背景</h2><ol>
<li><p>在<code>hexo/source/_data</code>目录下新建文件<code>footer.swig</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.canvas_nest %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">color</span>=<span class="string">&quot;0,0,255&quot;</span> <span class="attr">opacity</span>=<span class="string">&#x27;0.5&#x27;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-2&quot;</span> <span class="attr">count</span>=<span class="string">&quot;50&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>主题配置文件开启自定义footer.swig，同时配置<code>canvas_nest</code>开启</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建站点</title>
    <url>/posts/26676/</url>
    <content><![CDATA[<h1 id="Hexo搭建站点"><a href="#Hexo搭建站点" class="headerlink" title="Hexo搭建站点"></a>Hexo搭建站点</h1><p><a href="https://hexo.io/index.html">hexo官方网站</a></p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol>
<li>Github新建仓库，命名为 <code>&#123;username&#125;.github.io</code></li>
<li>安装<a href="https://nodejs.org/en/download">Node.js</a>，安装Stable版本。</li>
<li><p>安装Hexo-cli，即Hexo的命令行工具。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
</li>
</ol>
<span id="more"></span>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><ol>
<li><p>创建项目，进入创建的文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init &#123;name&#125;</span><br><span class="line">cd &#123;name&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>启动项目</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>显示如下界面，浏览器打开 <code>http://localhost:4000/</code>查看博客站点</p>
<img src="/posts/26676/image-20231105181105552.png" class="" title="image-20231105181105552"></li>
<li><p>编译部署项目</p>
<p>修改根目录的 <code>_config.yml</code>文件，修改Deployment部分为新建仓库的地址，修改分支为master</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&quot;git&quot;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&quot;git@github.com:xxx/xxx.github.io.git&quot;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>
<p>安装git部署插件 <code>hexo-deployer-git</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>根目录创建文件 <code>deploy.sh</code>，内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>控制台输入 <code>sh deploy.sh</code>，编译部署项目，Hexo会把编译后的静态内容上传到 <code>master</code>分支</p>
</li>
<li><p>Github新建 <code>source</code>分支放置源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git checkout -b source</span><br><span class="line">git add -A</span><br><span class="line">git commit -m &quot;init blog&quot;</span><br><span class="line">git remote add origin git@github.com:&#123;username&#125;/&#123;username&#125;.github.io.git</span><br><span class="line">git push origin source</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="主站配置"><a href="#主站配置" class="headerlink" title="主站配置"></a>主站配置</h2><ol>
<li><p>修改 <code>_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">MY</span> <span class="string">BLOG</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">Javascript</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">HJL</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>延迟发布，手动指定日期晚于当前时间不会生成</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">future:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>归档页面删除分页效果</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>指定文件夹跳过渲染，在根目录source中创建html文件夹即可放置html文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;html/**&quot;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="主题配置-Next"><a href="#主题配置-Next" class="headerlink" title="主题配置-Next"></a>主题配置-Next</h2><ol>
<li><p>下载Next源码到Themes文件夹中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>根目录</strong>下 <code>_config.yml</code> 文件，修改 <code>theme</code>字段</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>themes/next</strong>目录下 <code>_config.yml</code> 文件</p>
<ul>
<li><p>布局样式：scheme，选择一种取消注释：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Favicon: <a href="https://realfavicongenerator.net/">图片转为图标网站</a>，图标下载后放置在 <code>themes/next/source/images</code>文件夹，并配置favicon：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/safari-pinned-tab.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="attr">ms_browserconfig:</span> <span class="string">/images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>头像：avatar，<code>themes/next/source/images</code>文件夹中放置 <code>avatar.png</code>作为图像，rounded配置圆形，rotated配置hover旋转：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="comment"># url: #/images/avatar.gif</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.png</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Back2top：快速返回文章顶部，<code>enable</code>开启，<code>sidebar</code>配置侧边栏，<code>scrollpercent</code>配置阅读百分比：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Reading_progress：显示阅读进度，上方显示进度条：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Github_banner：页面右上角跳转到Github仓库</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/xxx</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Local_search：搜索功能</p>
<p>安装插件 <code>hexo-generator-searchdb</code>：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p><strong>根目录</strong>的 <code>_config.yml</code>文件配置搜索：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<p><strong>themes/next目录下</strong>的 <code>_config.yml</code>文件配置搜索：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Custom_file_path：自定义文件路径，例如，在<strong>根目录</strong> <code>source/_data</code>创建 <code>styles.styl</code>文件，在该文件自定义修改网站的css：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>powered：去掉footer中Hexo与Next强力驱动文字</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line"><span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>busuanzi_count：不蒜子访客统计</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Reward：打赏功能，将图片放到source/images中即可</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># comment: Donate comment here.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>fancybox：点击图片时放大该图片，并且可以快速浏览当前文章的所有图片</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># FancyBox is a tool that offers a nice and elegant way to add zooming functionality for images.</span></span><br><span class="line"><span class="comment"># For more information: https://fancyapps.com/fancybox</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h2 id="新建内容"><a href="#新建内容" class="headerlink" title="新建内容"></a>新建内容</h2><ol>
<li><p>新建文章：创建的文章在目录 <code>source/_posts</code>文件夹下，MarkDown格式</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new xxx</span><br></pre></td></tr></table></figure>
<p>   文章开头采用如下格式添加信息：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hexo构建</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2023-11-04 20:01:20</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="string">-Hexo</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="string">-Hexo</span></span><br></pre></td></tr></table></figure>
<p>检查Next主题的<code>_config.yml</code>中简介设置打开：(默认安装时打开)</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>在文章中添加截断，只有截断之前的内容才会在列表页展示</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>
<p>点击“阅读全文”按钮跳转后，会自动定位到<code>more</code>标签的位置，如果想要取消定位，</p>
<p>在<code>themes/next/layout/_macro/post.swig</code>中去除<code>#more</code>即可</p>
<p><strong>隐藏文章</strong>：在Font-Matter中添加<code>published: false</code>即可</p>
</li>
<li><p>新建分类：</p>
<p>新建分类页面，生成 <code>/source/categories/index.md</code>文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>
<p>Front Matter中添加 <code>type: categories</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2023-11-06 17:21:15</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>
<p>创建文章的Front Matter中设置分类</p>
<ul>
<li><p>一级分类</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">FE</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>二级分类</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">FE</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">CSS</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>新建标签</p>
<p>新建标签页，生成 <code>/source/tags/index.md</code>文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>Front Matter中添加 <code>type: tags</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2023-11-04 15:45:29</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>
<p>修改<strong>主题</strong>的 <code>_config.yml</code>文件，配置Tags和categories</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>
<p>清除无用的标签：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>JS逆向</title>
    <url>/posts/32357/</url>
    <content><![CDATA[<h2 id="反爬虫"><a href="#反爬虫" class="headerlink" title="反爬虫"></a>反爬虫</h2><p>限制爬虫程序访问服务器资源和获取数据的行为，包括不限于请求限制、拒绝响应、客户端身份验证、文本混淆、动态渲染。</p>
<span id="more"></span>
<h2 id="浏览器五个组件与三个解释器"><a href="#浏览器五个组件与三个解释器" class="headerlink" title="浏览器五个组件与三个解释器"></a>浏览器五个组件与三个解释器</h2><p>用户界面：包括地址栏、前进、后退、页面主窗口等</p>
<p>浏览器引擎：用户操作传递给渲染引擎</p>
<p>渲染引擎：调用解释器解释HTML、CSS、JS代码，重排页面</p>
<p>数据存储：本地存储体积较小的数据，cookie、storage等</p>
<p>网络：自动加载HTML文档中需要的其他资源</p>
<p>解释器：CSS解释器、HTML解释器、Javascript解释器</p>
<h2 id="PyExecJS"><a href="#PyExecJS" class="headerlink" title="PyExecJS"></a>PyExecJS</h2><p>安装Pyexecjs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pyexecjs</span><br></pre></td></tr></table></figure>
<p>检测环境</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"><span class="built_in">print</span>(execjs.get().name)</span><br><span class="line"><span class="comment"># Node.js (V8)</span></span><br></pre></td></tr></table></figure>
<p>举个例子</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个简单的 JavaScript 函数</span></span><br><span class="line">js_code = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">function add(a, b) &#123;</span></span><br><span class="line"><span class="string">    return a + b;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 JavaScript 运行时中执行 JavaScript 代码</span></span><br><span class="line">context = execjs.<span class="built_in">compile</span>(js_code)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用 JavaScript 函数并获取结果</span></span><br><span class="line">result = context.call(<span class="string">&quot;add&quot;</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>
<p>特殊编码的输入输出可以用Base64编码</p>
<h2 id="使用NodeJS与浏览器的问题"><a href="#使用NodeJS与浏览器的问题" class="headerlink" title="使用NodeJS与浏览器的问题"></a>使用NodeJS与浏览器的问题</h2><p>NodeJS没有window对象，需要自己创建空对象，或者指向global</p>
<p>window.btoa在nodeJS不存在，可以使用Buffer.from(‘xxx’).toString(‘base64’)转化</p>
<h2 id="Hook"><a href="#Hook" class="headerlink" title="Hook"></a>Hook</h2><p>使用hook重新执行函数，寻找到JS加解密入口</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">hook</span>(<span class="params">object, attr</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> func = object[attr];</span><br><span class="line">  object[attr] = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;xxx&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> func.<span class="title function_">apply</span>(object, <span class="variable language_">arguments</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//eg:</span></span><br><span class="line"><span class="title function_">hook</span>(<span class="variable language_">window</span>, <span class="string">&#x27;btoa&#x27;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
        <category>JS</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>background-removal使用教程</title>
    <url>/posts/9583/</url>
    <content><![CDATA[<p>该npm包于2023.7发布，能够直接在浏览器中删除图片的背景，无费用与隐私问题。<a href="https://img.ly/showcases/cesdk/background-removal/web?utm_medium=project&amp;utm_source=github&amp;utm_campaign=bg-removal">DEMO</a></p>
<span id="more"></span>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><code>@imgly/background-removal</code>允许开发人员直接在浏览器中无缝地从图像中删除背景。</p>
<p><strong>特性：</strong></p>
<ul>
<li><strong>浏览器内执行后台删除</strong>。直接在用户浏览器中执行整个后台删除过程，无需额外的服务器成本，利用本地设备计算能力，完成背景的去除。</li>
<li><strong>数据隐私保护</strong>。完全浏览器运行，无需传输到外部服务器。</li>
<li><strong>与 IMG.LY 的 CE.SDK 无缝集成</strong>。<code>@imgly/background-removal</code>提供与<a href="https://img.ly/products/creative-sdk?utm_source=github&amp;utm_medium=project&amp;utm_campaign=bg-removal">IMG.LY 的 CE.SDK </a>的无缝集成，使开发人员能够轻松地将强大的浏览器内图像抠图和背景去除功能合并到他们的项目中。</li>
</ul>
<p>使用的神经网络（<a href="https://onnx.ai/">ONNX 模型</a><code>@imgly/background-removal</code>）和 WASM 文件托管在<a href="https://www.unpkg.com/">UNPKG</a>上，因此库的所有用户都可以轻松下载。如果您想在自己的服务器上托管数据，请参阅自定义资产服务部分。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install @imgly/background-removal</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> imglyRemoveBackground <span class="keyword">from</span> <span class="string">&quot;@imgly/background-removal&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">image_src</span>: <span class="title class_">ImageData</span> | <span class="title class_">ArrayBuffer</span> | <span class="title class_">Uint8Array</span> | <span class="title class_">Blob</span> | <span class="variable constant_">URL</span> | <span class="built_in">string</span> = ...;</span><br><span class="line"></span><br><span class="line"><span class="title function_">imglyRemoveBackground</span>(image_src).<span class="title function_">then</span>(<span class="function">(<span class="params">blob: Blob</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// The result is a blob encoded as PNG. It can be converted to an URL to be used as HTMLImage.src</span></span><br><span class="line">  <span class="keyword">const</span> url = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>第一次运行获取 wasm 和 onnx 模型文件需要一定的时间。所有文件都由浏览器和附加模型缓存进行缓存。</p>
<h2 id="高级配置"><a href="#高级配置" class="headerlink" title="高级配置"></a>高级配置</h2><p>该库不需要任何配置即可启动，可选参数可以提供对库的更多控制。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Config</span> = &#123;</span><br><span class="line">  <span class="attr">publicPath</span>: <span class="built_in">string</span>; <span class="comment">// 模型和wasm文件的公共路径</span></span><br><span class="line">  <span class="attr">debug</span>: bool; <span class="comment">// 启用或禁用console输出</span></span><br><span class="line">  <span class="attr">proxyToWorker</span>: bool; <span class="comment">// 是否代理计算给webworker. (Default true)</span></span><br><span class="line">  <span class="attr">model</span>: <span class="string">&#x27;small&#x27;</span> | <span class="string">&#x27;medium&#x27;</span>; <span class="comment">// 使用的模型. (Default &quot;medium&quot;)</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="下载的大小与质量"><a href="#下载的大小与质量" class="headerlink" title="下载的大小与质量"></a>下载的大小与质量</h3><ul>
<li>small（~40MB）：有时会显示伪影。</li>
<li>medium（～80MB）：默认模型。</li>
</ul>
<h3 id="下载进度监控"><a href="#下载进度监控" class="headerlink" title="下载进度监控"></a>下载进度监控</h3><p>首次运行获取必要的数据并存储在浏览器缓存中。由于下载可能需要一些时间，可以选择查看下载进度。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">config</span>: <span class="title class_">Config</span> = &#123;</span><br><span class="line">  <span class="attr">progress</span>: <span class="function">(<span class="params">key, current, total</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Downloading <span class="subst">$&#123;key&#125;</span>: <span class="subst">$&#123;current&#125;</span> of <span class="subst">$&#123;total&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h3><p>性能在很大程度上取决于可用的功能集。最重要的是，请确保 <code>SharedArrayBuffer</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer">MDN</a>可用。由于 <code>SharedArrayBuffer</code> 的安全要求，需要设置两个标头来使您的站点与跨源隔离</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;Cross-Origin-Opener-Policy&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Cross-Origin-Embedder-Policy&#x27;</span>: <span class="string">&#x27;require-corp&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="定制资源"><a href="#定制资源" class="headerlink" title="定制资源"></a>定制资源</h3><p>目前，wasm 和 onnx 神经网络通过 unpkg 提供服务。对于生产使用，我们建议您自行托管它们。因此，请将所有 .wasm 和 .onnx 文件复制到您的公共路径 $PUBLIC_PATH，并重新配置库。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> node_modules/@imgly/background-removal/dist/*.wasm <span class="variable">$PUBLIC_PATH</span></span><br><span class="line"><span class="built_in">cp</span> node_modules/@imgly/background-removal/dist/*.onnx <span class="variable">$PUBLIC_PATH</span></span><br></pre></td></tr></table></figure>
<p>然后，在代码中可以导入 <code>@imgly/background-removal</code> 库，配置并使用它来移除背景。参考以下示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> imglyRemoveBackground, &#123;<span class="title class_">Config</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@imgly/background-removal&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> public_path = <span class="string">&quot;https://example.com/assets/&quot;</span>; <span class="comment">// assets 被提供的路径</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">config</span>: <span class="title class_">Config</span> = &#123;</span><br><span class="line">  <span class="attr">publicPath</span>: public_path, <span class="comment">// wasm 文件的路径</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">image_src</span>: <span class="title class_">ImageData</span> | <span class="title class_">ArrayBuffer</span> | <span class="title class_">Uint8Array</span> | <span class="title class_">Blob</span> | <span class="variable constant_">URL</span> | string = ...;</span><br><span class="line"></span><br><span class="line"><span class="title function_">imglyRemoveBackground</span>(image_src, config).<span class="title function_">then</span>(<span class="function">(<span class="params">blob: Blob</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 结果是以 PNG 编码的 Blob。</span></span><br><span class="line">  <span class="comment">// 它可以转换为 URL，用作 HTMLImage.src</span></span><br><span class="line">  <span class="keyword">const</span> url = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这段代码的作用是将 <code>@imgly/background-removal</code> 库的 wasm 和 onnx 文件从 unpkg 复制到您的公共路径，并配置库以使用这些文件来执行背景移除操作。请确保替换 <code>public_path</code> 变量为您自己的实际公共路径。</p>
<h3 id="调试输出"><a href="#调试输出" class="headerlink" title="调试输出"></a>调试输出</h3><p>启用调试输出并记录到控制台</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">config</span>: <span class="title class_">Config</span> = &#123;</span><br><span class="line">  <span class="attr">debug</span>: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="跨域资源共享（CORS）"><a href="#跨域资源共享（CORS）" class="headerlink" title="跨域资源共享（CORS）"></a>跨域资源共享（CORS）</h3><p>如果您遇到 CORS 问题，您可能需要通过以下方式将其他参数传递给 fetch 函数</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">config</span>: <span class="title class_">Config</span> = &#123;</span><br><span class="line">  <span class="attr">fetchArgs</span>: &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;no-cors&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="它们给谁用？"><a href="#它们给谁用？" class="headerlink" title="它们给谁用？"></a>它们给谁用？</h2><p><code>@imgly/background-removal</code>适合需要直接在浏览器中高效且经济高效地去除背景的开发人员和项目，包括但不限于：</p>
<ul>
<li>需要实时去除产品图像背景的<strong>电子商务应用程序</strong>。</li>
<li>需要背景去除功能以增强用户体验的<strong>图像编辑应用程序</strong>。</li>
<li><strong>基于网络的图形设计工具</strong>，旨在通过浏览器内背景删除来简化创作过程。</li>
</ul>
<p>无论您是专业开发人员还是业余爱好者，<code>@imgly/background-removal</code>都可以让您轻松交付令人印象深刻的应用程序和服务。</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>npm</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>npm</tag>
        <tag>抠图</tag>
      </tags>
  </entry>
  <entry>
    <title>typora添加参考文献</title>
    <url>/posts/29479/</url>
    <content><![CDATA[<p>MarkDown兼容HTML的语法，根据HTML中参考文献引用的方法，实现如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">This is a test sentence.<span class="tag">&lt;<span class="name">sup</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#ref1&quot;</span>&gt;</span>[1]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line">……</span><br><span class="line">Reference</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;ref1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;black&quot;</span>&gt;</span>[1]<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
]]></content>
      <categories>
        <category>Typora</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>参考文献</tag>
      </tags>
  </entry>
  <entry>
    <title>查看Github仓库占用的存储空间</title>
    <url>/posts/6295/</url>
    <content><![CDATA[<ol>
<li><p>登录Github首页，点击账户的setting</p>
<span id="more"></span>
<img src="/posts/6295/image-20231106133638213.png" class="" title="image-20231106133638213">
</li>
<li><p>进入设置页面，点击Repositories，即可看到各个仓库占用的存储。(单个文件仓库1个G以下应该都是没有问题的，单文件限制100m，大于100m的文件需要用git-lfs)</p>
<img src="/posts/6295/image-20231106133806358.png" class="" title="image-20231106133806358">
</li>
</ol>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>格密码基础</title>
    <url>/posts/46633/</url>
    <content><![CDATA[<h2 id="格"><a href="#格" class="headerlink" title="格"></a>格</h2><p>给定 $b_1,b_2,\dots,b_n\in \mathbb{R}^m$ 是$n$个线性无关的列向量，由它们生成的格被定义为：</p>
<script type="math/tex; mode=display">
\mathcal L(b_1,b_2,...,b_n)=\left\{\sum{x_ib_i}|x_i∈\mathbb Z\right\}</script><p>其中$b_1,b_2,…,b_n$称作格的基。如果我们定义矩阵$B$是$m\times n$的矩阵，其列为$b_1,b_2,\dots,b_n$，则由矩阵$B$生成的格为：</p>
<script type="math/tex; mode=display">
\mathcal L(B)=\mathcal L(b_1,b_2,...,b_n)=\left\{Bx|x∈\mathbb Z^n\right\}</script><p>其中格的秩为$n$，维数为$m$，如果$n=m$，此时我们称该格为满秩格。</p>
<span id="more"></span>
<h2 id="格的行列式"><a href="#格的行列式" class="headerlink" title="格的行列式"></a>格的行列式</h2><p>令$B=(b_1,b_2,\dots,b_n)$为格$\Lambda$的一组格基，则格$\Lambda=\mathcal L(B)$的行列式被定义为：</p>
<script type="math/tex; mode=display">
det(\mathcal L(B))=\sqrt{det(B^TB)}</script><h2 id="模格"><a href="#模格" class="headerlink" title="模格"></a>模格</h2><p>对于素数$s$、矩阵$A\in \mathbb Z_q^{n\times m}$、和向量$u\in \mathbb Z_q^n$，模格定义如下：</p>
<script type="math/tex; mode=display">
\begin{aligned}\Lambda_q(A)&=\{y\in\mathbb{Z}^ms.t.\exists s\in\mathbb{Z}_q^n,A^T s=y({\mathrm{mod}}q)\}\\\\\Lambda_q^\bot(A)&=\{y\in\mathbb{Z}^mst.Ay=0({\mathrm{mod}}q)\}\\\\\Lambda_q^u(A)&=\{y\in\mathbb{Z}^ms.t.Ay=u({\mathrm{mod}}q)\}\end{aligned}</script><h2 id="对偶格"><a href="#对偶格" class="headerlink" title="对偶格"></a>对偶格</h2><p>给定$m$维的格$\Lambda=\mathcal L(B)\subset \mathbb R^m$，对偶格$\Lambda^*$的定义为：</p>
<script type="math/tex; mode=display">
\Lambda^*=\{y\in\mathbb R^m|\forall x\in\Lambda,\langle x,y\rangle\in\mathbb Z\}</script><p>对偶格满足$\Lambda^\ast=\mathcal L((B^{-1})^T)$并且$det(\Lambda^\ast)=\frac{1}{det(\Lambda)}$</p>
<h2 id="离散高斯分布"><a href="#离散高斯分布" class="headerlink" title="离散高斯分布"></a>离散高斯分布</h2><p>对于$\sigma\in\mathbb R^+$和向量$c\in\mathbb R^m$，其中$\sigma$是高斯分布的标准差，$c$是高斯分布的中心。定义m维的高斯分布$\rho_{\sigma,c}(x)=\exp(-\pi\frac{|x-c|^2}{\sigma^2})$和$\rho_{\sigma,\epsilon}(\Lambda)=\sum_{x\in\Lambda}\rho_{\sigma,\epsilon}(x)$，则对于在格$\Lambda$上对于任意的$y\in\Lambda$，以$c$为中心，以$\sigma$为参数的高斯分布为：</p>
<script type="math/tex; mode=display">
\mathcal{D}_{\Lambda,\sigma,c}\left(y\right)=\frac{\rho_{\sigma,c}(y)}{\rho_{\sigma,c}(\Lambda)}=\frac{\rho_{\sigma,c}(y)}{\sum_{x\in\Lambda}\rho_{\sigma,c}(x)}</script><h2 id="拒绝采样定理-1"><a href="#拒绝采样定理-1" class="headerlink" title="拒绝采样定理[1]"></a>拒绝采样定理<sup><a href="#Lattice Signatures without Trapdoors">[1]</a></sup></h2><p>假设$V$是$\mathbb Z^m$的子集，并且其中所有元素的范数小于常数$T$，$\sigma$是$\mathbb R$上的元素并且满足$\sigma=w(T\sqrt{\log m})$，$h:V\rightarrow \mathbb R$是一个概率分布。存在常数$M=O(1)$使得算法$\mathcal A$的分布</p>
<script type="math/tex; mode=display">
\begin{flalign}
&\mathcal A: \nonumber \\
&1{:\mathbf{v}}\stackrel{\$}\leftarrow h& \nonumber \\
&2:\mathbf{z}\stackrel{\$}{\leftarrow}D_{\mathbf{v},\sigma}^m& \nonumber \\
&3:output\textit{ }(\mathbf{z},\mathbf{v})\textit{ with probability }\min\left(\frac{D_{\sigma}^{m}(\mathbf{z})}{MD_{\mathbf{v},\sigma}^{m}(\mathbf{z})},1\right)& \nonumber \\
\end{flalign}</script><p>与算法$\mathcal F$的分布的统计距离不超过$\frac{2^{-w(\log m)}}{M}$</p>
<script type="math/tex; mode=display">
\begin{flalign}
&\mathcal F:& \nonumber\\
&1{:\mathbf{v}}\stackrel{\$}\leftarrow h& \nonumber \\
&2:\mathbf{z}\stackrel{\$}{\leftarrow}D_{\sigma}^m& \nonumber \\
&3:output\textit{ }(\mathbf{z},\mathbf{v})\textit{ with probability }\frac{1}{M}& \nonumber
\end{flalign}</script><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a name="Lattice Signatures without Trapdoors"><font color="black">[1] </font></a>Lyubashevsky V.Lattice Signatures without Trapdoors[C].In Proceedings of 31st Annual Inter-<br>national Conference on the Theory and Applications of Cryptographic Techniques,April 15-19, 2012,Cambridge,UK,Berlin,Heidelberg,2012:738–755.</p>
]]></content>
      <categories>
        <category>密码学</category>
        <category>格</category>
      </categories>
      <tags>
        <tag>密码学</tag>
        <tag>格</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫红线</title>
    <url>/posts/45344/</url>
    <content><![CDATA[<h2 id="禁止"><a href="#禁止" class="headerlink" title="禁止"></a>禁止</h2><ol>
<li>个人隐私数据</li>
<li>收费的视频文本音乐等并售卖开网站</li>
<li>同行竞争不遵守robots协议</li>
<li>国家政府网站</li>
<li>多线程爬把对方网站爬崩了</li>
<li>公开破解加密网站（仅供学习可以）</li>
</ol>
<h2 id="可以爬取"><a href="#可以爬取" class="headerlink" title="可以爬取"></a>可以爬取</h2><ol>
<li>遵循robots协议</li>
<li>网站公开数据和接口返回的无加密数据</li>
</ol>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
</search>
